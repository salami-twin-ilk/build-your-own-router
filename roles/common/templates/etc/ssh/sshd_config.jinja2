# Package generated configuration file
# See the sshd_config(5) manpage for details

# What ports, IPs and protocols we listen for
Port 22

# Use these options to restrict which interfaces/protocols sshd will bind to
ListenAddress ::
ListenAddress 0.0.0.0

Protocol 2

# HostKeys for protocol version 2
{% if sshd_use_ecdsa_host_key %}
HostKey /etc/ssh/ssh_host_ecdsa_key
{% endif %}
{% if sshd_use_ed25519_host_key %}
HostKey /etc/ssh/ssh_host_ed25519_key
{% endif %}
{% if sshd_use_rsa_host_key %}
HostKey /etc/ssh/ssh_host_rsa_key
{% endif %}

#Privilege Separation is turned on for security
UsePrivilegeSeparation yes

# Only allow strongest encryption ciphers, message authentication codes, and key exchange algorithms
Ciphers {{ sshd_supported_ciphers }}
MACs {{ sshd_supported_macs }}
KexAlgorithms {{ sshd_supported_kexs }}

# Lifetime and size of ephemeral version 1 server key
KeyRegenerationInterval 3600
ServerKeyBits 1024

# Logging
SyslogFacility AUTH
LogLevel INFO

# Authentication:
LoginGraceTime 120
PermitRootLogin {{ sshd_permit_root_login }}
StrictModes yes

# Only allow login for members of the "ssh-users" group
{% for sag in sshd_allow_groups %}
AllowGroups {{ sag }}
{% endfor %}

RSAAuthentication yes
{% if sshd_pubkey_authentication %}
PubkeyAuthentication yes
{% else %}
PubkeyAuthentication no
{% endif %}
#AuthorizedKeysFile	%h/.ssh/authorized_keys

# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts yes
# For this to work you will also need host keys in /etc/ssh_known_hosts
RhostsRSAAuthentication no
# similar for protocol version 2
HostbasedAuthentication no
# Uncomment if you don't trust ~/.ssh/known_hosts for RhostsRSAAuthentication
#IgnoreUserKnownHosts yes

# To enable empty passwords, change to yes (NOT RECOMMENDED)
PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
ChallengeResponseAuthentication no

# Change to no to disable tunnelled clear text passwords
{% if sshd_password_authentication %}
PasswordAuthentication yes
{% else %}
PasswordAuthentication no
{% endif %}

# Kerberos options
#KerberosAuthentication no
#KerberosGetAFSToken no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes

{% if sshd_allow_agent_forwarding %}
AllowAgentForwarding yes
{% else %}
AllowAgentForwarding no
{% endif %}
{% if sshd_allow_tcp_forwarding %}
AllowTcpForwarding yes
{% else %}
AllowTcpForwarding no
{% endif %}
{% if sshd_allow_x11_forwarding %}
X11Forwarding yes
X11DisplayOffset 10
{% else %}
X11Forwarding no
{% endif %}
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
#UseLogin no

#MaxStartups 10:30:60
Banner /etc/issue.net

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

Subsystem sftp /usr/lib/openssh/sftp-server

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes
